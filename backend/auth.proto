syntax = "proto3";

package auth;

// Message definitions

// Request and response for registering a user
message RegisterUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message RegisterUserResponse {
  string id = 1;
  string message = 2;
  string error = 3;
}

// Request and response for logging in a user
message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
  string error = 2;
}

// Request and response for verifying a JWT token
message VerifyTokenRequest {
  string token = 1;
}

message VerifyTokenResponse {
  bool success = 1;
  User user = 2; // Nested message
  string error = 3;
}

// Request and response for publishing an MQTT message
message PublishMqttMessageRequest {
  string topic = 1;
  string message = 2;
}

message PublishMqttMessageResponse {
  bool success = 1;
  string error = 2;
}

// Request and response for subscribing to an MQTT topic
message SubscribeMqttTopicRequest {
  string topic = 1;
}

message SubscribeMqttTopicResponse {
  bool success = 1;
  string message = 2;
  string error = 3;
}

// Request and response for fetching a route
message GetRouteRequest {
  string start = 1;
  string end = 2;
}

message GetRouteResponse {
  string geometry = 1;
  float distance = 2; // Kilometers
  float duration = 3; // Seconds
  string error = 4;
}

// User object for nested responses
message User {
  string id = 1;
  string email = 2;
}

// Service definition
service AuthService {
  rpc RegisterUser (RegisterUserRequest) returns (RegisterUserResponse);
  rpc Login (LoginRequest) returns (LoginResponse);
  rpc VerifyToken (VerifyTokenRequest) returns (VerifyTokenResponse);
  rpc PublishMqttMessage (PublishMqttMessageRequest) returns (PublishMqttMessageResponse);
  rpc SubscribeMqttTopic (SubscribeMqttTopicRequest) returns (SubscribeMqttTopicResponse);
  rpc GetRoute (GetRouteRequest) returns (GetRouteResponse);
}
